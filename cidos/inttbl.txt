//CID-OS inttbl
float* inttAddress;

#define INTT_SETCMPR 8
//#define INTT_DONTSETCS 16
#define INTT_ENABLED 32
#define INTT_ISNMI 64

#define INTT_NUM_INTS 256
#define INTT_ENTRY_DEFAULT intt_intEntryPoint

void inttInit() {
    lidtr inttAddress;
    stef;
    sti;
}

void inttDisable() {
    clef;
}

void inttSetInterrupt(float num, float* addr, float* codeseg, float flags) {
    float* ptr = inttAddress + num*4;
    if( addr != 0 ){
        ptr[0] = addr;
    }else{
        ptr[0] = intt_intEntryPoint;
    }
    ptr[1] = codeseg;
    ptr[2] = 0;
    ptr[3] = flags;
}

void inttSetAllUserHandlers(){
    float i;
    for(i = 32; i < INTT_NUM_INTS; ++i){
        inttSetInterrupt(i, INTT_ENTRY_DEFAULT, 0, INTT_ENABLED);
    }
}


intt_intEntryPoint:
    if(interruptHandler){
        float intNum, intCode;
        cpuget intNum, 28;
        cpuget intCode, 27;
        interruptHandler(intNum, intCode);
    }
iret;

